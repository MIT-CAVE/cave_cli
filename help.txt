Core Commands:
  create <app-name> [--version]
                            Creates a new CAVE app in the specified directory.
                              `--version`: str (optional)
                                - What: Used to specify a cave app version (git tag or branch name).
                                  - See: https://github.com/MIT-CAVE/cave_app/tags
                                  - See: https://github.com/MIT-CAVE/cave_app/branches/all
                                - Default: The latest stable version (default branch).
                              EG: `cave create my_app`
                              EG: `cave create my_app --version v3.0.2`
                              Note: To list available versions use `cave list-versions`

  run [<ip:port> --entrypoint --docker-args -interactive(-it)]    
                            Runs the CAVE app in the current directory.
                              `<ip:port>` (optional):
                                - The ip and port to host the app with the format
                                  <ip address>:<port>
                              `--entrypoint`: str (optional)
                                - What: The entrypoint to run the app with
                                - Default: `./utils/run_server.sh`
                              `--docker-args`: str (optional)
                                - What: Additional arguments to pass to the docker run command
                                - Default: "" (empty string)
                                - Note: docker-args can be passed to other cave commands that 
                                  execute
                                        `cave run` under the hood (e.g. cave reset)
                              `-it` | `-interactive`: flag (optional)
                                - What: Trigger to run the app in interactive mode
                                - Note: Sets the entrypoint to `bash`
                                - Note: Overides `--entrypoint` if both are specified
                                - Note: If you use a different Dockerfile base image, it must have
                                        `bash` installed and globally accessable.
                                - Note: Your current app is volume mounted into the container as 
                                        `/app` so you can change files externally and get live 
                                        updates.
                                - Note: The webapp is not started with this command, but can be 
                                        launched with `/app/utils/run_server.sh` while in 
                                        interactive mode.
                              EG: `cave run`
                                - Access with url: `localhost:8000`
                              EG: `cave run 192.168.1.1:8000`
                                - Access with url: `https://192.168.1.1:8000`
                              EG: `cave run -it`
                              EG  `cave run -interactive`
                              EG: `cave run --entrypoint './utils/my_script.sh'`
                              EG: `cave run --docker-args '--volume /my/host/path:/docker/path'`


Peripheral Commands:
  prettify [-all]           Cleans up cave_api code for the CAVE app in the current
                            directory using autoflake and black.
                              `-all`: flag (optional)
                                - What: Trigger prettify for cave_core and cave_app.
                              - Note: This command actually runs the entrypoint script
                                      `./utils/prettify.sh` in the app's container.

  reset                     Removes the Docker containers (deletes and recreates them from scratch)
                            for the app in this directory. The database will be reset to default 
                            values.
                              - Note: This command:
                                1) Deletes the app specific postgresql container and volume
                                2) Deletes the app specific docker container
                                3) Recreates the app specific postgresql container and volume
                                4) Recreates the app specific docker container
                                5) Executes the entrypoint script `./utils/reset_db.sh` in the app's 
                                   container

  test [-all]               Runs the given test python file located in /cave_api/tests/.
                              `-all`: flag (optional)
                                - What: Trigger to run all files in /cave_api/tests/.
                              - Note: This command actually runs the entrypoint script
                                      `./utils/run_test.sh` in the app's container.
                              EG: `cave test test_init.py`
                              EG: `cave test -all`

  upgrade [--version -skip-env-upgrade]
                            Upgrades the CAVE app in the current directory.
                              `--version`: str (optional)
                                - What: Used to specify a cave app version (git tag or branch name).
                                  - See: https://github.com/MIT-CAVE/cave_app/tags
                                  - See: https://github.com/MIT-CAVE/cave_app/branches/all
                                - Default: The latest stable version (default branch).
                              `-skip-env-upgrade`: flag (optional)
                                - What: Skip upgrading the project .env file, leaving it as is.
                              EG: `cave upgrade --version v3.0.2`

  purge <app-path>          Removes the app in the specified directory, as well as removing
                            its associated database.
                              EG: `cave purge my_app/`


Utility Commands:
  help                      Prints this help text.

  list [-all]               Lists CAVE apps running in docker
                              `-all`: flag (optional)
                                - What: Trigger to list all running cave app containers (not
                                        just the app names) with their full container names
                                        - EG: my_app_django, my_app_postgres, my_app_nginx
                                - Note: This flag is mostly only used for cave_cli development
                                        purposes. It is not recommended for general use.
                              EG: `cave list`

  list-versions | lv [--pattern -static]
                            Lists all available stable versions of the CAVE App
                              `--pattern`: str (optional)
                                - What: A pattern to filter the versions by
                                - Note: This should be part or all of the version number
                              `--repo`: str (optional)
                                - What: Show the versions available for a specific repo
                                - Options: ['cave_app', 'cave_static', 'cave_cli', 'cave_utils']
                                - Default: 'cave_app'
                              EG: `cave list-versions`
                              EG: `cave lv --pattern v2`
                              EG: `cave lv --pattern v2.1`
                              EG: `cave lv --pattern v2.1.0`
                              EG: `cave lv --pattern 2.1`
                              EG: `cave lv --repo cave_static`
                              EG: `cave lv --repo cave_cli --pattern v2`
                              EG: `cave lv --repo cave_utils --pattern v2.1`

  kill [--app -all]         Kills the app run from the current directory. This is normally
                            used when a CAVE app wasn't properly shut down.
                              `--app`: str (optional)
                                - What: The name of the app to kill
                                - Default: The app in the current directory
                              `-all`: flag (optional)
                                - What: Kill all apps
                              EG: `cave kill --app my_app`
                              EG: `cave kill -all`

  sync --url [--branch --include --exclude --post-sync]
                            Merges files from the given repo (url) into the CAVE app in the
                            current directory. This always excludes the `.git` folder.
                              `--url`: str (required)
                                - What: The git `url` for a repo to which you have clone access
                              `--branch`: str (optional)
                                - What: The branch of the git url you wish to sync
                              `--include` string of space separated substrings (optional)
                                - What: A space separated string of strings (filenames) that should 
                                        be included (even if in an `--exclude` statement) for a 
                                        sync operation.
                              `--exclude` string of space separated substrings (optional)
                                - What: A space separated string of strings (filenames) that should 
                                        not be included in the sync operation (`--include` takes 
                                        precedent)
                                - Note: If not excluded, a file is automatically included
                              `--post-sync`: str (optional)
                                - What: A command to run after doing the upgrade with the name of 
                                        the directory holding the dowloaded remote version of the 
                                        repository as the first argument
                              EG: `cave sync --url git@github.com:mit-cave/cave_app_aws.git \
                                   --exclude "'.git' '.gitignore' 'README.md'"`

  uninstall                 Removes the CAVE CLI.

  update [--version]        Updates the CAVE CLI.
                              `--version`: str (optional)
                                - What: Used to choose a specific CAVE CLI version (git tag or 
                                        branch name)
                                  - See: https://github.com/MIT-CAVE/cave_cli/tags
                                  - See: https://github.com/MIT-CAVE/cave_cli/branches/all
                                - Default: The latest stable version (default branch)
                              EG: `cave update --version v3.0.2`

  version                   Prints the version of your installed CAVE CLI.

Global Flags:
  `-l` | `-legacy`:         Runs the legacy version of the cli (not docker based).
                              - Note: Some commands differ as this is direct access to the legacy CLI
                                - See `cave help -legacy`
                              - EG: `cave run -l`

  `--ll` | `--loglevel`:    Specify a log level to use for any command from the list:
                              - ['DEBUG', 'INFO', 'WARN', 'ERROR', 'SILENT']
                              - EG: `cave version --loglevel ERROR`
                                - Note: Returns nothing since version is INFO level by default

  `-v` | `-verbose` :       Enable verbose logging output (shorthand for `--loglevel DEBUG`)
                              - Note: This overules `--loglevel` if both are specified
                              - EG: `cave run -v`

  `-y`:                     Automatically answer (bypass) any confirmation prompts with `y`.
                              - Note: This is useful for scripting
                              - EG: `cave reset -y`
